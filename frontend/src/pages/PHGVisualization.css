/* src/styles/PHGVisualizationPage.css */

/* --- Variables --- */
:root {
  --background-primary: #0a192f;
  --background-secondary: #112240;
  --background-tertiary: #1f2d4a;
  --text-primary: #e6f1ff;
  --text-secondary: #ccd6f6;
  --text-muted: #8892b0;
  --accent-primary: #64ffda;
  --accent-primary-dark: #0a7c72;
  --accent-primary-hover: #52d8c3;
  --border-color: #233554;
  --border-color-light: #304a7c;
  --error-color: #ff7b7b;
  --error-background: rgba(255, 123, 123, 0.1);
  --success-color: var(--accent-primary);
  --success-background: rgba(100, 255, 218, 0.1);
  --info-color: #77a5ff;
  --info-background: rgba(119, 165, 255, 0.1);
  --warning-color: #ffcc66;
  --warning-background: rgba(255, 204, 102, 0.1);

  --border-radius: 6px;
  --card-shadow: 0 6px 20px -8px rgba(2, 12, 27, 0.5);
  --transition-speed: 0.25s;
  --header-height: 70px; /* Adjust if needed */
}

/* --- General Styles --- */
body { /* Apply base styles if not done elsewhere */ }
* { box-sizing: border-box; margin: 0; padding: 0; }

/* --- Page Layout --- */
.phg-vis-page {
  background-color: var(--background-primary);
  color: var(--text-primary);
  min-height: 100vh;
  padding: 2rem;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  display: flex;
  flex-direction: column;
}

/* --- Controls Bar --- */
.controls-bar {
  background-color: var(--background-secondary);
  padding: 0; /* Padding applied to inner sections */
  border-radius: var(--border-radius);
  border: 1px solid var(--border-color);
  margin-bottom: 1.5rem;
  box-shadow: var(--card-shadow);
  overflow: hidden; /* Needed for collapse animation */
}

.controls-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.8rem 1.5rem; /* Padding for header */
    background-color: var(--background-tertiary);
    border-bottom: 1px solid var(--border-color);
}

.control-section-title {
    color: var(--text-secondary);
    font-size: 1.1rem; /* Adjusted size */
    font-weight: 600;
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.6rem;
}
.control-section-title .section-icon { /* Example class name */
    color: var(--accent-primary);
    font-size: 1.2em;
}

.collapse-btn {
    /* Inherits .secondary-btn base */
    padding: 0.4rem 0.8rem;
    font-size: 0.8rem;
}

.controls-content {
    padding: 1.5rem;
    display: grid;
    /* More organized grid layout */
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1rem 1.5rem; /* Row and column gap */
    align-items: end; /* Align items to the bottom of their grid cell */
}

.control-group {
    display: flex;
    flex-direction: column;
    gap: 0.4rem; /* Space between label and input */
}
.control-group label {
    color: var(--text-muted);
    font-size: 0.85rem; /* Smaller labels */
    font-weight: 500;
    margin-bottom: 0.1rem;
}

/* Span specific groups if needed */
.control-group.span-2 { grid-column: span 2; }
.control-group.span-3 { grid-column: span 3; }
.control-group.span-all { grid-column: 1 / -1; }


/* --- Themed Inputs & Selects --- */
.themed-input,
.dropdown-trigger {
  width: 100%; padding: 0.7rem 1rem; /* Consistent padding */
  background-color: var(--background-primary); color: var(--text-primary);
  border: 1px solid var(--border-color-light); border-radius: var(--border-radius);
  font-size: 0.9rem; transition: all var(--transition-speed) ease;
}
.themed-input:focus,
.dropdown-trigger:focus {
  outline: none; border-color: var(--accent-primary);
  box-shadow: 0 0 0 2px rgba(100, 255, 218, 0.2);
}
.themed-input:disabled,
.dropdown-trigger:disabled { background-color: var(--background-tertiary); opacity: 0.6; cursor: not-allowed; }


/* --- Custom Dropdown Styling --- */
.dropdown-container { position: relative; }
.dropdown-trigger { display: flex; justify-content: space-between; align-items: center; text-align: left; cursor: pointer; }
.dropdown-trigger .dropdown-label { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
.dropdown-trigger .placeholder { color: var(--text-muted); }
.dropdown-chevron { color: var(--text-muted); transition: transform var(--transition-speed) ease; flex-shrink: 0; margin-left: 0.5rem; }
.dropdown-trigger[aria-expanded="true"] .dropdown-chevron { transform: rotate(180deg); }

.dropdown-panel {
    position: absolute; z-index: 50; margin-top: 0.25rem; width: 100%;
    background-color: var(--background-secondary); /* Use secondary for panel */ border: 1px solid var(--border-color-light);
    border-radius: var(--border-radius); box-shadow: 0 4px 15px rgba(0,0,0,0.3);
    max-height: 200px; overflow-y: auto; padding: 0.25rem 0;
}
.dropdown-option {
    display: block; width: 100%; text-align: left; padding: 0.6rem 1rem;
    cursor: pointer; font-size: 0.9rem; color: var(--text-secondary);
    background: none; border: none; transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}
.dropdown-option:hover { background-color: var(--background-tertiary); color: var(--text-primary); } /* Subtle hover */
.dropdown-option.selected { background-color: var(--accent-primary-dark); color: white; font-weight: 500; }
.dropdown-option.disabled { color: var(--text-muted); cursor: not-allowed; background-color: transparent !important; }


/* --- Slider Styling --- */
.range-slider-group { /* Let it span more columns if needed */ grid-column: span 2; /* Example: takes 2 columns */}
.range-slider-label { color: var(--text-muted); font-size: 0.85rem; font-weight: 500; display: flex; justify-content: space-between; margin-bottom: 0.5rem;}
.range-slider-label .value { color: var(--text-primary); font-weight: 600; }
.input-hint { color: var(--text-muted); font-size: 0.75rem; margin-top: 0.3rem; display: block; }

input[type="range"].themed-slider {
  width: 100%; height: 6px; cursor: pointer; appearance: none;
  background: linear-gradient(to right, var(--accent-primary-dark), var(--accent-primary) 50%, var(--background-tertiary) 50%); /* Gradient track */
  /* Use gradient to show progress (adjust percentage with JS if needed) */
  /* background: var(--background-tertiary); */ /* Simpler track */
  border-radius: 3px; outline: none; transition: opacity .2s;
}
input[type="range"].themed-slider:disabled { opacity: 0.5; cursor: not-allowed;}

/* Thumb styles */
input[type="range"].themed-slider::-webkit-slider-thumb {
  appearance: none; width: 18px; height: 18px; background: var(--accent-primary);
  border-radius: 50%; cursor: pointer; border: 3px solid var(--background-secondary); /* Creates halo */
  margin-top: -6px; /* Adjust thumb position vertically */
  box-shadow: 0 0 5px rgba(100, 255, 218, 0.3);
}
input[type="range"].themed-slider::-moz-range-thumb {
  width: 18px; height: 18px; background: var(--accent-primary);
  border-radius: 50%; cursor: pointer; border: 3px solid var(--background-secondary);
  box-shadow: 0 0 5px rgba(100, 255, 218, 0.3);
}

/* --- Visualize Button --- */
.phg-action-btn { /* Main visualize/refresh button */
    padding: 0.7rem 1.5rem;
    font-size: 0.95rem;
    /* Inherits primary-btn */
}
.control-group.action-group { /* Specific group for button alignment */
    justify-content: flex-start; /* Align button left within its group */
    padding-top: calc(0.85rem + 0.1rem + 0.5rem); /* Approximate height of label + margin */
}


/* --- React Flow Container --- */
.reactflow-wrapper {
  flex-grow: 1; min-height: 60vh; /* Adjusted height */ width: 100%;
  background-color: var(--background-primary); border: 1px solid var(--border-color);
  border-radius: var(--border-radius); position: relative;
}
/* Style React Flow elements */
.react-flow__node { font-size: 10px !important; color: var(--text-primary) !important; border: 1px solid var(--border-color-light) !important; border-radius: 3px !important; }
.react-flow__edge path { stroke: var(--text-muted) !important; stroke-width: 1.5 !important; }
.react-flow__controls { box-shadow: none !important; }
.react-flow__controls button { background-color: var(--background-secondary) !important; border-bottom: 1px solid var(--border-color) !important; color: var(--text-secondary) !important; }
/* .react-flow__controls button:hover { background-color: var(--background-tertiary) !important; } */ /* Removed hover */
.react-flow__minimap { background-color: var(--background-secondary) !important; border-radius: var(--border-radius); border: 1px solid var(--border-color); }
.react-flow__background { background-color: var(--background-primary) !important; }

/* --- Legend --- */
.legend-card {
    background-color: rgba(17, 34, 64, 0.85); /* Slightly less transparent */
    backdrop-filter: blur(5px); border: 1px solid var(--border-color);
    border-radius: var(--border-radius); padding: 0.8rem 1rem;
    position: absolute; top: 1rem; right: 1rem; z-index: 10; max-width: 220px; /* Adjusted width */
    box-shadow: 0 2px 10px rgba(0,0,0,0.3);
}
.legend-card h4 {
    color: var(--accent-primary); font-size: 0.9rem; font-weight: 600;
    margin: 0 0 0.6rem 0; padding-bottom: 0.5rem; border-bottom: 1px solid var(--border-color-light);
    display: flex; align-items: center; gap: 0.4rem;
}
.legend-item { display: flex; align-items: center; gap: 0.6rem; margin-bottom: 0.4rem; }
.legend-color-box { width: 14px; height: 14px; border-radius: 3px; flex-shrink: 0; border: 1px solid rgba(255,255,255,0.2);}
.legend-text { font-size: 0.8rem; color: var(--text-secondary); }
.legend-note { font-size: 0.75rem; color: var(--text-muted); margin-top: 0.6rem; line-height: 1.4; }


/* --- Node Detail Modal Styling --- */
.node-modal-overlay { /* Consistent modal overlay */
  position: fixed; top: 0; left: 0; right: 0; bottom: 0;
  background-color: rgba(10, 25, 47, 0.85); display: flex; align-items: center;
  justify-content: center; z-index: 1000; opacity: 0; animation: fadeIn 0.3s forwards;
}
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

.node-modal-content {
  background-color: var(--background-secondary); padding: 1.5rem 2rem;
  border-radius: var(--border-radius); border: 1px solid var(--border-color-light);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3); max-width: 90%; width: 1200px;
  position: relative; max-height: 90vh; overflow: hidden;
  display: flex; flex-direction: column;
}
.node-modal-close-btn {
  position: absolute; top: 0.8rem; right: 1rem; background: none; border: none;
  color: var(--text-muted); font-size: 1.5rem; cursor: pointer; padding: 0.25rem;
  line-height: 1; transition: color 0.2s ease; z-index: 10;
}
/* .node-modal-close-btn:hover { color: var(--accent-primary); } */ /* Removed hover */
.node-modal-header h2 {
  color: var(--accent-primary); font-size: 1.4rem; margin: 0 0 1rem 0;
  padding-bottom: 0.8rem; border-bottom: 1px solid var(--border-color);
}
.node-details-grid {
    display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 0.5rem 1.5rem; margin-bottom: 1rem; background-color: var(--background-tertiary);
    padding: 0.8rem 1rem; border-radius: var(--border-radius);
}
.node-details-grid p { margin: 0; font-size: 0.9rem; color: var(--text-secondary);}
.node-details-grid strong { color: var(--accent-primary); margin-right: 0.5rem; font-weight: 600; }

.iframe-container { flex-grow: 1; position: relative; min-height: 400px; background-color: var(--background-primary); border-radius: var(--border-radius); overflow: hidden; }
.iframe-skeleton { position: absolute; inset: 0; z-index: 5; background-color: var(--background-tertiary); display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 1rem; border-radius: var(--border-radius); animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; }
@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: .5; } }
.iframe-skeleton .spinner { /* Use spinner instead of bars */ }
.iframe-skeleton p { color: var(--text-muted); font-size: 0.9rem; }
.jbrowse-iframe { display: block; border: none; width: 100%; height: 100%; border-radius: var(--border-radius); }

/* --- Spinner --- */
.spinner { border: 3px solid rgba(255, 255, 255, 0.3); border-radius: 50%; border-top-color: var(--accent-primary); width: 1.5rem; height: 1.5rem; animation: spin 1s linear infinite; display: inline-block; }
.small-spinner { width: 1.0rem; height: 1.0rem; border-width: 2px; }
.button-spinner { width: 0.9em; height: 0.9em; border-width: 2px; }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

/* --- HOVER MEDIA QUERY FIX (NO HOVER TRANSFORMS) --- */
@media (hover: hover) and (pointer: fine) {
    /* Keep only non-transform hovers here if desired */
     .primary-btn:hover:not(:disabled) { /* Already defined above */ }
     .secondary-btn:hover:not(:disabled) { /* Already defined above */ }
     .dropdown-option:hover, .dropdown-checkbox-label:hover { background-color: var(--background-tertiary); color: var(--text-primary); }
     .download-link:hover { text-decoration: underline; color: var(--accent-primary-hover); }
}

/* --- Responsive Design --- */
@media (max-width: 1024px) {
    .controls-content { grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); } /* Allow more controls per row */
    .range-slider-group { grid-column: span 2; }
}
@media (max-width: 768px) {
  .phg-vis-page { padding: 1.5rem; }
  .controls-bar { flex-direction: column; align-items: stretch; } /* Stack header/content */
  .controls-header { padding: 0.8rem 1rem; }
  .controls-content { padding: 1rem; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 0.8rem 1rem;}
  .page-header h1 { font-size: 1.7rem; }
  .reactflow-wrapper { min-height: 400px; }
  .legend-card { padding: 0.6rem 0.8rem; max-width: 180px; top: 0.8rem; right: 0.8rem;}
  .legend-text { font-size: 0.75rem;}
  .node-modal-content { width: 95%; padding: 1rem 1.5rem; }
  .node-modal-header h2 { font-size: 1.2rem; }
}
@media (max-width: 480px) {
  .phg-vis-page { padding: 1rem; }
  .page-header h1 { font-size: 1.5rem; }
  .controls-content { grid-template-columns: 1fr; /* Stack all controls */}
  .range-slider-group { grid-column: span 1; }
  .phg-action-btn { width: 100%; }
  .node-modal-content { padding: 1rem; }
  .node-details-grid { grid-template-columns: 1fr; gap: 0.3rem; }
  .legend-card { display: none; }
}